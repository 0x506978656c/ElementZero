// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_UUID_MOD_PROTO_H_
#define FLATBUFFERS_GENERATED_UUID_MOD_PROTO_H_

#include "flatbuffers/flatbuffers.h"

#include "uuid_addition.h"

namespace Mod {
namespace proto {

struct UUID;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(8) UUID FLATBUFFERS_FINAL_CLASS {
 private:
  uint64_t low_;
  uint64_t high_;

 public:
  UUID() {
    memset(static_cast<void *>(this), 0, sizeof(UUID));
  }
  UUID(uint64_t _low, uint64_t _high)
      : low_(flatbuffers::EndianScalar(_low)),
        high_(flatbuffers::EndianScalar(_high)) {
  }
  uint64_t low() const {
    return flatbuffers::EndianScalar(low_);
  }
  uint64_t high() const {
    return flatbuffers::EndianScalar(high_);
  }
};
FLATBUFFERS_STRUCT_END(UUID, 16);

}  // namespace proto
}  // namespace Mod

#endif  // FLATBUFFERS_GENERATED_UUID_MOD_PROTO_H_
