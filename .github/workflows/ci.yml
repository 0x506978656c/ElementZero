name: CI

on: [push]

env:
  eatpdb_version: v0.0.4
  bds_version: 1.14.30.2

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set vcpkg's response file path used as part of cache's key.
      env:
        vcpkgResponseFile: ${{ github.workspace }}/vcpkg.txt
      run: echo "::set-env name=vcpkgResponseFile::$vcpkgResponseFile"
      shell: bash

    - name: Cache vcpkg artifacts
      uses: actions/cache@v1
      id: cache
      with:
        path: ${{ github.workspace }}/vcpkg
        key: vcpkg-${{ hashFiles( env.vcpkgResponseFile ) }}

    - name: run-vcpkg
      uses: lukka/run-vcpkg@v0.9
      id: runvcpkg
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        vcpkgGitCommitId: master
        vcpkgTriplet: x64-windows
        vcpkgArguments: '@${{ env.vcpkgResponseFile }}'

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    - name: install llvm
      run: |
        Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
        scoop install llvm --global
        echo "::set-env name=CC::clang-cl"
        echo "::set-env name=CXX::clang-cl"
        echo "::set-env name=PATH::$env:PATH"

    - name: Cache lib artifacts
      uses: actions/cache@v1
      id: libcache
      with:
        path: ${{ github.workspace }}/Lib
        key: lib-${{ hashFiles( 'eatpdb.yaml' ) }}-${{ env.eatpdb_version }}-${{ env.bds_version }}
        
    - name: Download BDS
      if: steps.libcache.outputs.cache-hit != 'true'
      run: |
        curl -L -o D:/bds.zip https://minecraft.azureedge.net/bin-win/bedrock-server-${{ env.bds_version }}.zip
        mkdir BDS
        cd BDS
        unzip D:/bds.zip
      shell: bash
    
    - name: Install EatPdb
      if: steps.libcache.outputs.cache-hit != 'true'
      run: |
        curl -L -o D:/eatpdb.zip https://github.com/codehz/EatPdb/releases/download/${{ env.eatpdb_version }}/win-x64.zip
        mkdir D:/eatpdb
        cd D:/eatpdb
        unzip D:/eatpdb.zip
      shell: bash
        
    - name: Build bedrock_server_mod.lib
      if: steps.libcache.outputs.cache-hit != 'true'
      run: |
        mkdir Lib Dist
        cd BDS
        D:/eatpdb/eatpdb exec ../eatpdb.yaml
        lib /def:bedrock_server_mod.def /machine:x64
        cp bedrock_server_mod.lib ../Lib
        cp bedrock_server_mod.exe ../Lib
      shell: bash
      
    - name: Build
      run: |
        mkdir Build
        cd Build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DCMAKE_INSTALL_PREFIX="D:/a/wine-bdlauncher/wine-bdlauncher/Dist" \
        -DCMAKE_TOOLCHAIN_FILE="D:/a/wine-bdlauncher/wine-bdlauncher/vcpkg/scripts/buildsystems/vcpkg.cmake" \
        ..
        ninja
        ninja install
        cp ../Lib/bedrock_server_mod.exe ../Dist
        cp ../Lib/bedrock_server_mod.lib ../Dist/Lib
      shell: bash
        
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: dist
        path: Dist
